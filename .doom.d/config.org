#+title: Doom Emacs Configuration
#+author: David Basile Filho
#+startup: showeverything
#+description: An org document for David Basile Filho's Doom Emacs Configurations
#+property: header-args :tangle config.el
#+auto_tangle: t

* Table of Contents :toc:
- [[#about-doom-emacs][ABOUT DOOM EMACS]]
- [[#theming][THEMING]]
- [[#org][ORG]]
- [[#rust][RUST]]
- [[#unityel][UNITY.EL]]
- [[#minimap][MINIMAP]]
- [[#beacon][BEACON]]
- [[#org-auto-tangle][ORG-AUTO-TANGLE]]
- [[#bookmarks][BOOKMARKS]]
- [[#magit][MAGIT]]
- [[#evil-mode][EVIL MODE]]
- [[#doom][DOOM]]

* ABOUT DOOM EMACS
Doom is a configuration framework for GNU Emacs tailored for Emacs bankruptcy veterans who want less framework in their frameworks, a modicum of stability (and reproducibility) from their package manager, and the performance of a hand rolled config (or better). It can be a foundation for your own config or a resource for Emacs enthusiasts to learn more about our favorite operating system.

* THEMING
Sets up the color scheme, the font and line numbers.

#+begin_src emacs-lisp
(setq doom-theme 'catppuccin)
(setq doom-font (font-spec :family "JetBrainsMono Nerd Font" :size 16))
(setq display-line-numbers-type 'relative)
#+end_src

* ORG
Configures ORG Mode.

#+begin_src emacs-lisp
(setq org-directory "~/org/")

(org-babel-do-load-languages
'org-babel-load-languages
'((shell . t)))

;; Keybindings
(map! :leader
      "c v t" #'org-babel-tangle)
#+end_src

* RUST
Configures Rust.

#+begin_src emacs-lisp
(setq lsp-rust-server 'rust-analyzer)
#+end_src

* UNITY.EL
A package that allows Emacs to integrate with the Unity Game Engine.

#+begin_src emacs-lisp
(straight-use-package
'(unity :type git :host github :repo "elizagamedev/unity.el"))
(add-hook 'after-init-hook #'unity-mode)
#+end_src

* MINIMAP
A package that displays a minimap on the right of the screen.

#+begin_src emacs-lisp
(setq minimap-window-location 'right)
(setq minimap-mode nil)
#+end_src

* BEACON
A cool effect that appears when the cursor moves a lot.

#+begin_src emacs-lisp
(beacon-mode 1)
#+end_src

* ORG-AUTO-TANGLE
A package that makes Emacs automatically tangle an org document after saving it.

#+begin_src emacs-lisp
(use-package! org-auto-tangle
  :defer t
  :hook (org-mode . org-auto-tangle-mode)
  :config
  (setq org-auto-tangle-default t))

;; Keybindings
#+end_src

* BOOKMARKS
Bookmarks save whatever point of a file you want to save in a bookmarks file.

| COMMAND         | DESCRIPTION                             | KEYBINDING |
|-----------------+-----------------------------------------+------------|
| list-bookmarks  | List Bookmarks                          | SPC b L    |
| bookmark-set    | Set bookmark                            | SPC b m    |
| bookmark-delete | Delete bookmark                         | SPC b M    |
| bookmark-save   | Save current bookmarks to bookmark file | SPC b w    |

#+begin_src emacs-lisp
(setq bookmark-default-file "~/.doom.d/bookmarks")

(map! :leader
      (:prefix ("b". "buffer")
       :desc "List bookmarks"                          "L" #'list-bookmarks
       :desc "Set bookmark"                            "m" #'bookmark-set
       :desc "Delete bookmark"                         "M" #'bookmark-delete
       :desc "Save current bookmarks to bookmark file" "w" #'bookmark-save))

#+end_src

* MAGIT
Configurating Magit, the Emacs Git interface. It's Magit!

#+begin_src emacs-lisp
(map! :leader
      (:prefix ("g". "git")
       :desc "Git stage modified"     "a" #'magit-stage-modified
       :desc "Git push"               "p" #'magit-push))
#+end_src

* EVIL MODE
Keybindings for Emacs Evil Mode.

| COMMAND                           | DESCRIPTION                 | KEYBINDING |
| evilnc-comment-or-uncomment-lines | Comment and uncomment lines | SPC b .    |
| evil-redo                         | Redo the last change        | SPC r      |
| evil-undo                         | Undo the last change        | SPC u      |

#+begin_src emacs-lisp
(map! :leader
      "b ." #'evilnc-comment-or-uncomment-lines)
(map! :leader
      "r" #'evil-redo)
(map! :leader
      "u" #'evil-undo)
#+end_src

* DOOM
